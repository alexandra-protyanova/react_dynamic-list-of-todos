{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["API","TodoList","addUserId","useState","todos","setTodos","input","setInput","option","setOption","useEffect","fetch","then","response","json","allTodos","filteredTodos","filter","todo","title","toLowerCase","includes","filterOption","completed","handleOptions","className","type","value","onChange","event","target","onClick","copyOfTodos","i","length","rev","Math","floor","random","map","classnames","readOnly","checked","userId","id","CurrentUser","changeUser","selectedUser","setSelectedUser","allUsers","find","user","name","email","phone","App","selectedUserId","setSelectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4778d83f.chunk.js","sourcesContent":["const API = 'https://mate.academy/students-api';\n\nexport const getTodos = (): Promise<Todo[]> => {\n  return fetch(`${API}/todos`)\n    .then(response => response.json());\n};\n\nexport const getUser = (): Promise<User[]> => {\n  return fetch(`${API}/users`)\n    .then(response => response.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport './TodoList.scss';\nimport classnames from 'classnames';\nimport { getTodos } from '../../api';\n\ntype Props = {\n  addUserId: (userId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  addUserId,\n}) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [input, setInput] = useState('');\n  const [option, setOption] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(allTodos => setTodos(allTodos));\n  }, []);\n\n  const handleOptions = (filterOption: string, todo: Todo) => {\n    switch (filterOption) {\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return true;\n    }\n  };\n\n  const filteredTodos = todos\n    .filter(todo => todo.title.toLowerCase().includes(input.toLowerCase())\n    && handleOptions(option, todo));\n\n  const randomizer = () => {\n    const copyOfTodos = [...todos];\n\n    for (let i = copyOfTodos.length - 1; i >= 0; i -= 1) {\n      const rev = Math.floor(Math.random() * (i + 1));\n\n      [copyOfTodos[i], copyOfTodos[rev]] = [copyOfTodos[rev], copyOfTodos[i]];\n    }\n\n    setTodos(copyOfTodos);\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <input\n          type=\"text\"\n          data-cy=\"filterByTitle\"\n          value={input}\n          onChange={(event) => {\n            setInput(event.target.value);\n          }}\n        />\n        <select\n          value={option}\n          onChange={(event) => {\n            setOption(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button\n          type=\"button\"\n          onClick={randomizer}\n        >\n          Randomize\n        </button>\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filteredTodos.map(todo => (\n            <li\n              className={classnames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )}\n              key={todo.id}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                  checked={todo.completed}\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => {\n                  addUserId(todo.userId);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number,\n  changeUser: (id: number) => void,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId, changeUser }) => {\n  const [selectedUser, setSelectedUser] = useState<User>();\n\n  useEffect(() => {\n    getUser()\n      .then(allUsers => setSelectedUser((allUsers\n        .find(user => user.id === userId))));\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${selectedUser?.id}`}</span></h2>\n\n      <h3\n        className=\"CurrentUser__name\"\n        data-cy=\"userName\"\n      >\n        {selectedUser?.name}\n      </h3>\n      <p className=\"CurrentUser__email\">{selectedUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{selectedUser?.phone}</p>\n\n      <button\n        type=\"button\"\n        data-cy=\"userButton\"\n        onClick={() => {\n          changeUser(0);\n        }}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  const selectUser = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          addUserId={selectUser}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              changeUser={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}